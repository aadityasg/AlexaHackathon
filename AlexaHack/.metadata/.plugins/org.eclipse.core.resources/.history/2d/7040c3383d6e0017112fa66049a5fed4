package com.ninja.alexa.skill.kitchen;

import java.net.URI;

import com.amazonaws.ClientConfiguration;
import com.amazonaws.DefaultRequest;
import com.amazonaws.Request;
import com.amazonaws.Response;
import com.amazonaws.http.AmazonHttpClient;
import com.amazonaws.http.HttpMethodName;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.ninja.alexa.skill.kitchen.aws.handlers.AWSErrorHandler;
import com.ninja.alexa.skill.kitchen.aws.handlers.AWSResponseHandler;
import com.ninja.alexa.skill.kitchen.utilities.Constants;

public class LambdaFunctionHandler implements RequestHandler<Object, String> {
	private AmazonHttpClient httpClient = new AmazonHttpClient(new ClientConfiguration());

	private Request<?> generateRequest(final String queryString) {
		Request<?> request = new DefaultRequest<>(Constants.API_ENDPOINT);
		request.setEndpoint(URI.create(Constants.API_ENDPOINT + Constants.API_KEY + Constants.API_QUERY + queryString));
		request.setHttpMethod(HttpMethodName.GET);
		return request;
	}

	private Response<String> sendRequest(final Request<?> request) {
		return httpClient.requestExecutionBuilder().request(request).errorResponseHandler(new AWSErrorHandler())
				.execute(new AWSResponseHandler());
	}

	@Override
	public String handleRequest(Object event, Context context) {
		context.getLogger().log("Received Event: " + event);
		try {
			// Response<String> response =
			// sendRequest(generateRequest(URLEncoder.encode(event.toString(),
			// "UTF-8")));
			// context.getLogger().log(response.getAwsResponse());
		} catch (Exception e) {
			e.printStackTrace();
			context.getLogger().log("Dang!");
		}

		return "Success";
	}
}