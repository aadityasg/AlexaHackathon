package com.ninja.alexa.skill.kitchen;

import java.net.URI;
import java.net.URLEncoder;

import com.amazonaws.ClientConfiguration;
import com.amazonaws.DefaultRequest;
import com.amazonaws.Request;
import com.amazonaws.Response;
import com.amazonaws.http.AmazonHttpClient;
import com.amazonaws.http.HttpMethodName;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;

public class LambdaFunctionHandler implements RequestHandler<String, String> {
	private AmazonHttpClient client = new AmazonHttpClient(new ClientConfiguration());

	private static final String API_ENDPOINT = "http://food2fork.com/api/search?";
	private static final String API_KEY = "key=b4f8a48d092e117bd2e925295ef11a0f";
	private static final String API_QUERY = "&q=";

	private Request<?> generateRequest(final String queryString) {
		Request<?> request = new DefaultRequest<>(API_ENDPOINT);
		request.setEndpoint(URI.create(API_ENDPOINT + API_KEY + API_QUERY + queryString));
		request.setHttpMethod(HttpMethodName.GET);
		return request;
	}

	private Response<String> sendRequest(final Request<?> request) {
		return client.requestExecutionBuilder().request(request).errorResponseHandler(new ElasticSearchErrorHandler())
				.execute(new ElasticSearchResponseHandler());
	}

	@Override
	public String handleRequest(String event, Context context) {
		context.getLogger().log("Received Event: " + event);
		try {
			Response<String> response = sendRequest(generateRequest(URLEncoder.encode(event, "UTF-8")));
			context.getLogger().log(response.getAwsResponse());
		} catch (Exception e) {
			e.printStackTrace();
			context.getLogger().log("Dang!");
		}

		return "Success";
	}
}